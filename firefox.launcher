#!/bin/sh

REALHOME=$(getent passwd $(id -u) | cut -d ':' -f 6)

# When running the snap for the first time, try and locate an existing
# firefox config in $HOME/.mozilla/firefox, and import it.
# This requires the personal-files plug to be connected.
DOTMOZILLA="$SNAP_USER_COMMON/.mozilla"
if [ ! -d "$DOTMOZILLA" ]; then
  FIREFOX_CONFIG="$REALHOME/.mozilla/firefox"
  if [ -d "$FIREFOX_CONFIG" ]; then
    SIZE=$(du -sb $FIREFOX_CONFIG | cut -f 1)
    AVAILABLE_BLOCKS=$(stat -f -c %a $SNAP_USER_COMMON)
    BLOCK_SIZE=$(stat -f -c %s $SNAP_USER_COMMON)
    AVAILABLE_SIZE=$(($AVAILABLE_BLOCKS*$BLOCK_SIZE))
    if [ $AVAILABLE_SIZE -gt $SIZE ]; then
      printf "Importing existing firefox profiles from $FIREFOX_CONFIG\n"
      TS1=$(date +%s.%3N)
      mkdir -p "$DOTMOZILLA"
      cp -R "$FIREFOX_CONFIG" "$DOTMOZILLA/"
      # Search and replace absolute file paths in plain-text config files.
      for FILENAME in "pkcs11.txt" "extensions.json"; do
        find "$DOTMOZILLA/firefox" -name "$FILENAME" \
            -exec sed -i 's#$FIREFOX_CONFIG#$DOTMOZILLA/firefox#g' {} \;
      done
      # Patch the imported profiles to set the default one for use by the snap
      # (legacy mode, no dedicated profiles).
      $SNAP/patch-default-profile.py
      TS2=$(date +%s.%3N)
      T=$(printf "$TS1 $TS2" | awk '{printf "%.3f",$2-$1}')
      printf "Import done in $T s\n"
    else
      printf "Not importing existing firefox profiles from $FIREFOX_CONFIG "
      printf "because there is not enough available space in $SNAP_USER_COMMON "
      printf "(required: $SIZE bytes / available: $AVAILABLE_SIZE bytes)\n"
    fi
  fi
fi

exec "$SNAP/usr/lib/firefox/firefox" "$@"
