name: firefox
version: "91.0.2-1"
summary: Mozilla Firefox web browser
description:  Firefox is a powerful, extensible web browser with support for modern web application technologies.
confinement: strict
grade: stable
base: core20
compression: lzo

apps:
  firefox:
    command: firefox.launcher
    command-chain: [tmpdir]
    desktop: firefox.desktop
    extensions: [gnome-3-38]
    environment:
      HOME: "$SNAP_USER_COMMON"
      GTK_USE_PORTAL: 1
    slots:
      - dbus-daemon
      - mpris
    plugs:
      - avahi-observe
      - browser-sandbox
      - camera
      - cups-control
      - gsettings
      - hardware-observe
      - home
      - joystick
      - network
      - network-observe
      - opengl
      - pulseaudio
      - removable-media
      - screen-inhibit-control
      - system-packages-doc
      - u2f-devices
      - unity7
      - upower-observe

plugs:
  browser-sandbox:
    interface: browser-support
    allow-sandbox: true
  dot-mozilla-firefox:
    interface: personal-files
    read: [$HOME/.mozilla/firefox]
  etc-firefox-policies:
    interface: system-files
    read: [/etc/firefox/policies]

layout:
  /usr/share/libdrm:
    bind: $SNAP/gnome-platform/usr/share/libdrm

parts:
  rust:
    plugin: nil
    build-packages:
      - wget
    override-pull: wget -O rustup.sh https://sh.rustup.rs
    override-build: sh rustup.sh -q -y
    override-prime: ''

  cbindgen:
    plugin: nil
    after:
      - rust
    override-build: $HOME/.cargo/bin/cargo install cbindgen
    override-prime: ''

  clang:
    plugin: nil
    build-packages:
      - wget
      - on amd64:
        - libtinfo6
      - on arm64:
        - libtinfo5
      - on armhf:
        - libtinfo5
    override-pull: |
      LLVM_RELEASE=12.0.0
      ROOT=https://github.com/llvm/llvm-project/releases/download/llvmorg-$LLVM_RELEASE/clang+llvm-$LLVM_RELEASE-
      if [ $SNAPCRAFT_TARGET_ARCH = "amd64" ]; then
        SUFFIX=x86_64-linux-gnu-ubuntu-20.04.tar.xz
      elif [ $SNAPCRAFT_TARGET_ARCH = "armhf" ]; then
        SUFFIX=armv7a-linux-gnueabihf.tar.xz
      elif [ $SNAPCRAFT_TARGET_ARCH = "arm64" ]; then
        SUFFIX=aarch64-linux-gnu.tar.xz
      fi
      wget -O - $ROOT$SUFFIX | tar -x --xz
    override-build: |
      cp -R clang+llvm-*/ $SNAPCRAFT_PART_INSTALL/usr/
    override-prime: ''

  nodejs:
    plugin: nil
    build-packages:
      - wget
    override-pull: |
      NODEJS_RELEASE=v14.17.4
      ROOT=https://nodejs.org/dist/$NODEJS_RELEASE/node-$NODEJS_RELEASE-linux-
      if [ $SNAPCRAFT_TARGET_ARCH = "amd64" ]; then
        SUFFIX=x64.tar.xz
      elif [ $SNAPCRAFT_TARGET_ARCH = "armhf" ]; then
        SUFFIX=armv7l.tar.xz
      elif [ $SNAPCRAFT_TARGET_ARCH = "arm64" ]; then
        SUFFIX=arm64.tar.xz
      fi
      wget -O - $ROOT$SUFFIX | tar -x --xz
    override-build: |
      cp -R node-*/ $SNAPCRAFT_PART_INSTALL/usr/
    override-prime: ''

  # Launchpad builders have a timeout for how long they are allowed to access
  # the internet (through a proxy) starting from the start of the build.
  # Since the firefox part takes a long time to build, we need to ensure
  # that all other parts that need to access the internet (to e.g. fetch build
  # or stage packages) are built before it (before the proxy authentication is
  # revoked).
  firefox:
    plugin: nil
    after:
      - rust
      - cbindgen
      - clang
      - nodejs
      - apikeys
      - distribution
      - ffmpeg
    build-packages:
      - libdbus-glib-1-dev
      - libgtk2.0-dev
      - libpython3-dev
      - libx11-xcb-dev
      - libxt-dev
      - m4
      - nasm
      - quilt
      - unzip
      - zip
    override-pull: |
      VERSION=$(echo $SNAPCRAFT_PROJECT_VERSION | cut -d- -f1)
      BUILD=$(echo $SNAPCRAFT_PROJECT_VERSION | cut -d- -f2)
      ROOT=https://ftp.mozilla.org/pub/firefox/candidates/$VERSION-candidates/build$BUILD
      wget -O - $ROOT/source/firefox-$VERSION.source.tar.xz | tar -x --xz --strip-components=1
      mkdir langpacks
      LOCALES=$(python3 taskcluster/docker/firefox-snap/extract_locales_from_l10n_json.py browser/locales/l10n-changesets.json)
      for LOCALE in $LOCALES; do
        wget -O langpacks/langpack-$LOCALE@firefox.mozilla.org.xpi $ROOT/linux-x86_64/xpi/$LOCALE.xpi
      done
    override-build: |
      QUILT_PATCHES=$SNAPCRAFT_PROJECT_DIR/patches quilt push -a
      export MOZCONFIG="$SNAPCRAFT_PROJECT_DIR/mozconfig"
      if [ $SNAPCRAFT_TARGET_ARCH != "armhf" ]; then
        echo "ac_add_options --enable-rust-simd" >> $MOZCONFIG
      fi
      export PATH=$HOME/.cargo/bin:$PATH
      GNOME_SDK_SNAP=/snap/gnome-3-38-2004-sdk/current
      export LDFLAGS="-Wl,-rpath-link=$GNOME_SDK_SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET -Wl,-rpath-link=$GNOME_SDK_SNAP/usr/lib"
      MACH="env -u LD_LIBRARY_PATH -u PYTHONPATH /usr/bin/python3 ./mach"
      $MACH create-mach-environment
      $MACH configure --prefix=$SNAPCRAFT_PART_INSTALL/usr
      $MACH build -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      $MACH install
      DISTRIBUTION=$SNAPCRAFT_PART_INSTALL/usr/lib/firefox/distribution
      mkdir -p $DISTRIBUTION/extensions
      cp taskcluster/docker/firefox-snap/firefox.desktop $SNAPCRAFT_PART_INSTALL/
      cp browser/branding/official/default256.png $SNAPCRAFT_PART_INSTALL/
      sed -i 's/\(^Icon=\).*$/\1\/default256.png/' $SNAPCRAFT_PART_INSTALL/firefox.desktop
      cp taskcluster/docker/firefox-snap/tmpdir $SNAPCRAFT_PART_INSTALL/
      cp langpacks/langpack-*.xpi $DISTRIBUTION/extensions/
    stage-packages:
      - libpci3
      - libxt6
    prime:
      - default256.png
      - firefox.desktop
      - tmpdir
      - usr/lib/firefox
      - usr/lib/*/libpci.so.*
      - usr/lib/*/libXt.so.*

  launcher:
    plugin: nil
    override-prime: |
      cp "$SNAPCRAFT_PROJECT_DIR/firefox.launcher" "$SNAPCRAFT_PRIME/"
      cp "$SNAPCRAFT_PROJECT_DIR/patch-default-profile.py" "$SNAPCRAFT_PRIME/"

  distribution:
    plugin: nil
    source: https://github.com/mozilla-partners/canonical.git
    override-prime: |
      mkdir -p $SNAPCRAFT_PRIME/usr/lib/firefox
      cp -R $SNAPCRAFT_PART_SRC/desktop/ubuntu/distribution $SNAPCRAFT_PRIME/usr/lib/firefox/

  ffmpeg:
    plugin: nil
    # Not using the ffmpeg snap (which might provide a more recent version)
    # because it is currently built on core18
    stage-packages:
      - libavcodec58
    prime:
      - usr/lib/*/libaom.so.*
      - usr/lib/*/libavcodec.so.*
      - usr/lib/*/libavutil.so.*
      - usr/lib/*/libcodec2.so.*
      - usr/lib/*/libdav1d.so.*
      - usr/lib/*/libgsm.so.*
      - usr/lib/*/libmd.so.*
      - usr/lib/*/libmfx.so.*
      - usr/lib/*/libmp3lame.so.*
      - usr/lib/*/libnuma.so.*
      - usr/lib/*/libOpenCL.so.*
      - usr/lib/*/libopus.so.*
      - usr/lib/*/libshine.so.*
      - usr/lib/*/libsnappy.so.*
      - usr/lib/*/libsoxr.so.*
      - usr/lib/*/libspeex.so.*
      - usr/lib/*/libswresample.so.*
      - usr/lib/*/libtheoradec.so.*
      - usr/lib/*/libtheoraenc.so.*
      - usr/lib/*/libtwolame.so.*
      - usr/lib/*/libva-drm.so.*
      - usr/lib/*/libva.so.*
      - usr/lib/*/libva-x11.so.*
      - usr/lib/*/libvdpau.so.*
      - usr/lib/*/libvpx.so.*
      - usr/lib/*/libwavpack.so.*
      - usr/lib/*/libwebpmux.so.*
      - usr/lib/*/libwebp.so.*
      - usr/lib/*/libx264.so.*
      - usr/lib/*/libx265.so.*
      - usr/lib/*/libxvidcore.so.*
      - usr/lib/*/libzvbi.so.*

  apikeys:
    plugin: nil
    build-packages:
      - coreutils
      - gpg
      - jq
    override-build: |
      export MOZCONFIG="$SNAPCRAFT_PROJECT_DIR/mozconfig"
      gpg -d --batch --passphrase "$(base64 -d $SNAPCRAFT_PROJECT_DIR/.passphrase)" -o apikeys $SNAPCRAFT_PROJECT_DIR/.apikeys
      cat apikeys | jq .MOZ_GOOGLE_LOCATION_SERVICE_API_KEY | tr -d '"' > $SNAPCRAFT_PART_INSTALL/gls-gapi.data
      echo "ac_add_options --with-google-location-service-api-keyfile=$SNAPCRAFT_STAGE/gls-gapi.data" >> $MOZCONFIG
      cat apikeys | jq .MOZ_GOOGLE_SAFEBROWSING_API_KEY | tr -d '"' > $SNAPCRAFT_PART_INSTALL/sb-gapi.data
      echo "ac_add_options --with-google-safebrowsing-api-keyfile=$SNAPCRAFT_STAGE/sb-gapi.data" >> $MOZCONFIG
      cat apikeys | jq .MOZ_MOZILLA_API_KEY | tr -d '"' > $SNAPCRAFT_PART_INSTALL/mozilla-desktop-geoloc-api.key
      echo "ac_add_options --with-mozilla-api-keyfile=$SNAPCRAFT_STAGE/mozilla-desktop-geoloc-api.key" >> $MOZCONFIG
    override-prime: ''

slots:
  dbus-daemon:
    interface: dbus
    bus: session
    name: org.mozilla.firefox
